
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

### ALIAS ###
# GIT #
alias ga="git add ."
alias gc="git commit -m"
alias gp="git push"

# DOCKER #
alias dmysql="docker run --name mysql -e MYSQL_ROOT_PASSWORD=secret -p 3307:3306 -d mysql:5.7"
alias dpma="docker run --name myadmin -d --link mysql:db -p 8080:80 phpmyadmin/phpmyadmin"

# MAC OS #
alias hidden="defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder"
alias show="defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder"


### FUNCTIONS ###
if $LOAD_FUNCTIONS ; then
    ## ALIAS ##
    alias git-sp="speedPush"
    alias git-sp-n="speedPushN"
    alias drm="dockerRmAll"
    alias drmv="dockerRmAllVolumes"
    alias dc-bu="dockerComposeBuildAndUpDetached"
    alias dc-e="dockerComposeExec"

    ########################
    # GIT SPEED PUSH       #
    ########################
    speedPush() {
	if [ $1 ]
	then 
            git add .
            git commit -m $1
            git push -f
	else
	    git add .
            git commit --amend --no-edit
            git push -f
	fi
    }

    ########################
    # GIT SPEED PUSH -n    #
    ########################
    speedPushN() {
        git add .
        git commit --amend --no-edit -n
        git push -f --no-verify
    }

    ########################
    # RM DOCKER CONTAINER  #
    ########################
    dockerRmAll() {
        docker stop $(docker ps -a -q)
        docker rm $(docker ps -a -q)
    }

    ########################
    # RM DOCKER VOLUMES    #
    ########################
    dockerRmAllVolumes() {
        docker volume rm $(docker volume ls -q)
    }

    ########################
    # DC BUILD AND UP -D   #
    ########################
    dockerComposeBuildAndUpDetached() {
        docker-compose build
        docker-compose up -d
    }

    ########################
    # DC EXEC              #
    # $1 = container       #
    # $2 = command         #
    ########################
    dockerComposeExec () {
        if [ $1 ] && [ $2 ]
        then
            docker-compose exec $1 $2
        else
            echo "Error : bad arguments"
        fi
    }

    ########################
    # MKDIR + CD           #
    # $1 = new folder name #
    ########################
    mkcd () {
        if [ $1 ]
        then
            mkdir $1
            cd $1
        else
            echo "Error : no argument"
        fi
    }

    ######################
    # BACK IN THE FILES  #
    # $1 = how much back #
    ######################
    b() {
        if [ $1 ]
        then
            i=$1
        else
            i=1
        fi

        count=2
        command='cd ..'
        while [ $count -le $i ]
        do
            command+="/.."
            (( count++ ))
        done

        eval $command
    }
fi

# Plugins option in .zshrc
plugins=(
  zsh-autosuggestions
)

source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

